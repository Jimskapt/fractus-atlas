name: Rust cargo multi-platform compilation

env:
  CARGO_TERM_COLOR: always

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            separator: \
            extension: .exe
          - os: windows-latest
            target: i686-pc-windows-msvc
            separator: \
            extension: .exe
          - os: macos-latest
            target: x86_64-apple-darwin
            separator: /
            extension: ""
          # - os: ubuntu-latest
          #   target: x86_64-unknown-linux-gnu
          #   separator: /
          #   extension: ""
          # - os: ubuntu-latest
          #   target: i686-unknown-linux-gnu
          #   separator: /
          #   extension: ""
          # - os: ubuntu-latest
          #   target: arm-unknown-linux-gnueabi
          #   separator: /
          #   extension: ""
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      # - name: Add 32 bits support
      #   if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
      #   run: sudo dpkg --add-architecture i386
      # - name: Add 32 bits support
      #   if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
      #   run: sudo apt-get update
      # - name: Install gtk (64 bits)
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   run: sudo apt-get install -y libgtk-3-dev libglib2.0-dev libwebkit2gtk-4.0-dev libgdk-pixbuf2.0-dev libpango-1.0-0
      # - name: Install gtk (32 bits)
      #   if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
      #   run: sudo apt-get install -y libgtk-3-dev:i386 libglib2.0-dev:i386 libwebkit2gtk-4.0-dev:i386 libgdk-pixbuf2.0-dev:i386 libpango1.0-dev:i386 libsoup2.4-dev:i386 libharfbuzz-dev:i386 libxml2-dev:i386 libicu-dev:i386
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: fractus-atlas-${{ matrix.target }}${{ matrix.extension }}
          path: target${{ matrix.separator }}${{ matrix.target }}${{ matrix.separator }}release${{ matrix.separator }}fractus-atlas${{ matrix.extension }}
